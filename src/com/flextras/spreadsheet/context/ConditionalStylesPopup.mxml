<?xml version = "1.0" encoding = "utf-8"?>
<context:BasePopup xmlns:fx = "http://ns.adobe.com/mxml/2009"
				   xmlns:s = "library://ns.adobe.com/flex/spark"
				   xmlns:mx = "library://ns.adobe.com/flex/mx"
				   xmlns:context = "com.flextras.spreadsheet.context.*"
				   title = "Set cell styles"
				   paddingLeft = "10"
				   paddingTop = "10"
				   paddingRight = "10"
				   paddingBottom = "10"
				   verticalGap = "10"
				   horizontalAlign = "center">

	<fx:Binding source = "grid.grid.selectedItem"
				destination = "cell" />

	<fx:Binding source = "Vector.&lt;Cell>(grid.grid.selectedItems)"
				destination = "cells" />

	<!---Condition-->
	<s:HGroup verticalAlign = "middle"
			  enabled = "{!!cell}">

		<s:DropDownList id = "operatorList"
						selectedItem = "{cell.condition.operator}"
						change = "operatorList_changeHandler(event)">
			<s:ArrayCollection>
				<fx:String>=</fx:String>

				<fx:String>&lt;></fx:String>

				<fx:String>&lt;</fx:String>

				<fx:String>&lt;=</fx:String>

				<fx:String>></fx:String>

				<fx:String>>=</fx:String>
			</s:ArrayCollection>
		</s:DropDownList>

		<s:TextInput id = "rightInput"
					 text = "{cell.condition.right}"
					 change = "rightInput_changeHandler(event)" />
	</s:HGroup>

	<!---Text color and alpha-->
	<s:HGroup verticalAlign = "middle"
			  enabled = "{!!cell}">
		<s:Label text = "color"
				 width = "100" />

		<mx:ColorPicker id = "colorStyle"
						change = "colorStyle_changeHandler(event)"
						selectedColor = "{cell.condition.styles.color}" />

		<s:Label text = "alpha"
				 paddingLeft = "10"
				 width = "110" />

		<s:HSlider id = "alphaStyle"
				   change = "alphaStyle_changeHandler(event)"
				   minimum = "0"
				   maximum = "1"
				   stepSize = ".01"
				   value = "{cell.condition.styles.alpha}" />
	</s:HGroup>

	<!---Background color and alpha-->
	<s:HGroup verticalAlign = "middle"
			  enabled = "{!!cell}">
		<s:Label text = "backgroundColor"
				 width = "100" />

		<mx:ColorPicker id = "backgroundColorStyle"
						change = "backgroundColorStyle_changeHandler(event)"
						selectedColor = "{cell.condition.styles.backgroundColor}" />

		<s:Label text = "backgroundAlpha"
				 paddingLeft = "10"
				 width = "110" />

		<s:HSlider id = "backgroundAlphaStyle"
				   change = "backgroundAlphaStyle_changeHandler(event)"
				   minimum = "0"
				   maximum = "1"
				   stepSize = ".01"
				   value = "{cell.condition.styles.backgroundAlpha}" />
	</s:HGroup>

	<fx:Script>
		<![CDATA[
			import com.flextras.spreadsheet.vos.BorderSide;
			import com.flextras.spreadsheet.vos.Cell;
			
			import mx.events.ColorPickerEvent;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			/**
			 * @private
			 */
			protected function operatorList_changeHandler (event : IndexChangeEvent) : void
			{
				if (operatorList.selectedIndex > -1)
					applyChanges ("operator", operatorList.selectedItem);
			}
			
			/**
			 * @private
			 */
			protected function rightInput_changeHandler (event : TextOperationEvent) : void
			{
				applyChanges ("right", rightInput.text);
			}
			
			/**
			 * @private
			 */
			protected function colorStyle_changeHandler (e : ColorPickerEvent) : void
			{
				applyChanges ("styles", {color: e.color});
			}
			
			/**
			 * @private
			 */
			protected function alphaStyle_changeHandler (e : Event) : void
			{
				applyChanges ("styles", {alpha: alphaStyle.value});
			}
			
			/**
			 * @private
			 */
			protected function backgroundColorStyle_changeHandler (e : ColorPickerEvent) : void
			{
				applyChanges ("styles", {backgroundColor: e.color});
			}
			
			/**
			 * @private
			 */
			protected function backgroundAlphaStyle_changeHandler (e : Event) : void
			{
				applyChanges ("styles", {backgroundAlpha: backgroundAlphaStyle.value});
			}
			
			/**
			 * @private
			 */
			protected function applyChanges (name : String, value : Object) : void
			{
				var o : Object = {};
				o[name] = value;
				
				for (var i : uint, n : uint = cells.length; i < n; ++i)
					cells[i].conditionObject = o;
				
				cell.conditionObject = o;
			}
		]]>
	</fx:Script>
</context:BasePopup>
